@using Shipping_System.ViewModels
@model List<OrderReporttWithOrderByStatusDateViewModel>
@inject IAuthorizationService AuthorizationService

@{
    ViewData["Title"] = "Index";
}

<h1>Orders</h1>

<div class="container mt-2">
    <div class="row justify-content-between">
        <div>
            <h6 class="mt-2"><i class="fa-solid fa-house"></i> > <a asp-action="Index" class="text-decoration-none">Orders</a></h6>
        </div>

        @if (AuthorizationService.AuthorizeAsync(User, Permissions.Orderes.Create).Result.Succeeded)
        {
            <p>
                <a class="btn btn-primary" asp-action="Create">Add Order</a>
            </p>
        }
    </div>
</div>






<div class="row my-3 flex-wrap ">
    <div class="col-md-3 my-1 filter-btn">
        <button data-orderState="0" onclick="filterOrders(0)" class="btn btn-primary w-100">All</button>
    </div>
    @foreach (var item in ViewBag.OrderStates)
    {
        <div class="col-md-3 my-1">
            <button id="@item.Id" onclick="filterOrders(@item.Id)" data-orderState="@item.Id" class="btn btn-primary w-100">@item.Name</button>
        </div>
    }

</div>


<div class="card shadow mb-4 text-center">
    <div class="card-body">
        <div class="table-responsive">


            <table class="table table-bordered text-center table-hover" id="dataTable" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th></th>
                        <th>Serial No.</th>
                        <th>Date</th>
                        <th>Client Details</th>
                        <th>Country</th>
                        <th>City</th>
                        <th>shipping Cost</th>
                        @if (User.IsInRole(Roles.Trader.ToString()))
                        {
                            <th>Edit Order</th>
                        }
                        @if (!User.IsInRole(Roles.Trader.ToString()))
                        {
                            <th>Edit Status</th>
                        }
                        @if (AuthorizationService.AuthorizeAsync(User, Permissions.Orderes.Delete).Result.Succeeded)
                        {
                            <th>Delete</th>
                        }
                        <th><i class="fa-solid fa-print"></i></th>
                    </tr>
                </thead>
                <tbody id="tableData">

                    @foreach (var item in Model)
                    {
                        <tr id="row_@item.Id" style='@(item.Status == "Delivered to the client" ? "background-color: #baf8ba;" : "")'>
                            <td>
                                <div class="form-check">
                                    <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault">
                                </div>
                            </td>
                            <td>@item.Id</td>
                            <td>@item.Date</td>
                            <td>
                                @item.Client<br />
                                @item.PhoneNumber
                            </td>
                            <td>@item.Country</td>
                            <td>@item.City</td>
                            <td>@item.ShippingPrice</td>
                            @if (User.IsInRole(Roles.Trader.ToString()))
                            {

                                @if (item.Status == "New")
                                {
                                    <td>
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-success"><i class="fa-solid fa-pen-to-square"></i></a>
                                    </td>
                                }
                                else
                                {
                                    <td></td>
                                }
                            }
                            @if (!User.IsInRole(Roles.Trader.ToString()))
                            {
                                <td>
                                    <a asp-route-id="@item.Id" asp-action="Status" class="btn btn-primary">Status</a>
                                </td>
                            }
                            @if (AuthorizationService.AuthorizeAsync(User, Permissions.Orderes.Delete).Result.Succeeded)
                            {
                                <td>
                                    <a class="btn btn-danger" onclick="Remove(@item.Id)"><i class="fa-solid fa-trash"></i></a>
                                </td>
                            }
                            @*}*@

                            <td>
                                <a class="btn btn-info text-white"><i class="fa-solid fa-print"></i></a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

        </div>
    </div>
</div>

@section Scripts {
    <script>
        function filterOrders(orderStateId) {

            var orderStateId = Number(orderStateId);
            $.ajax({
                url: `/Order/GetFilteredOrders?orderState=${orderStateId}`,
                error: function () {
                    console.log("Error");
                },
                success: function (result) {
                    document.getElementById("tableData").innerHTML = "";

                    for (let i of result) {
                        let backgroundColor = i.status === "Delivered to the client" ? "background-color: #baf8ba;" : "";
                        let itemId = i.id;
                        console.log(i.status)
                        document.getElementById("tableData").innerHTML +=
                            `<tr id="row_${i.id}" style="${backgroundColor}">
                                                  <td>
                                                    <div class="form-check">
                                                        <input class="form-check-input" type="checkbox" value="" id="flexCheckDefault">
                                                    </div>
                                                  </td>
                                                  <td>${i.id} </td>
                                                  <td>${i.date.slice(0, 10)}</td>
                                                  <td>${i.client} </br> ${i.phoneNumber} </td>
                                                  <td>${i.country}</td>
                                                  <td>${i.city}</td>
                                                  <td>${i.shippingPrice}</td>

        @if (User.IsInRole(Roles.Trader.ToString()))
        {
                        <td>
                        ${i.status === "New" ? `<a id="EditBtn_${i.id}" onclick="edit(${i.id})" class="btn btn-success"><i class="fa-solid fa-pen-to-square"></i></a>` : ''}
                        </td>
        }
        @if (!User.IsInRole(Roles.Trader.ToString()))

        {
                        <td>
                            <button id="statusBtn_${i.id}" class="btn btn-primary" onclick="editStatus(${i.id})">Status</button>
                        </td>
        }

        @if (AuthorizationService.AuthorizeAsync(User, Permissions.Orderes.Delete).Result.Succeeded)
        {
                        <td>
                            <a class="btn btn-danger" onclick="Remove(${i.id})"><i class="fa-solid fa-trash"></i></a>
                        </td>
        }
                                     <td>
                                         <a class="btn btn-info text-white"><i class="fa-solid fa-print"></i></a>
                                     </td>


                                    </tr>`
                    }
                }
            });

        }

        function editStatus(id) {

            $.ajax({
                url: `/Order/Status/${id}`,
                method: 'Get',
                success: function (response) {

                    window.location.href = `/Order/Status/${id}`;

                },
                error: function (error) {

                    console.error('Error updating status:', error);
                }
            });
        }

        function edit(id) {
            $.ajax({
                url: `/Order/Edit/${id}`,
                method: 'Get',
                success: function (response) {

                    window.location.href = `/Order/Edit/${id}`;
                },
                error: function (error) {

                    console.error('Error updating status:', error);
                }
            });
        }

        function Remove(id) {
            var row = document.getElementById("row_" + id)
            console.log(row)
            if (confirm("Are You Sure To Delete This Order")) {
                $.ajax({
                    url: `/Order/Delete/${id}`,
                    success: function (response) {
                        // Handle the success response
                        //window.location.href = `/Order/Delete/${id}`;
                        console.log("Delete");
                        row.remove();
                    },
                    error: function (error) {

                        console.error('Error updating status:', error);
                    }
                });
            }
        }
    </script>
}